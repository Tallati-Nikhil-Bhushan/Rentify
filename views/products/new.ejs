<%-layout("layouts/boilerplate",{categories})%> 
  <div class="row">
    <h1 class="text-center">New Product</h1>
    <div class="col-md-6 offset-md-3">
      <form action="/products" method="post" class="validate-form" enctype="multipart/form-data" novalidate>
        <div class="mb-3">
          <label class="form-label" for="title">Title</label>
          <input class="form-control" type="text" name="product[title]" id="title" required />
          <div class="valid-feedback">Looks Good</div>
        </div>

        <div class="form-group mb-3">
            <label for="FormControlSelect">Category</label>
            <select class="form-control" id="FormControlSelect" name="product[category]" >
                <option value="">Select a category</option>
                <% for( let category of categories ) { %>
                    <option value="<%= category.category %>"><%= category.category %></option>
                <% } %>
            </select>
          </div>

          <div class="form-group mb-3" id="subCategoryDiv" style="display: none;">
            <label for="subCategorySelect">Sub Category</label>
            <select class="form-control" id="subCategorySelect" name="product[sub_category]">
            </select>
          </div>

        <div class="mb-3">
          <label class="form-label" for="location">Location</label>
          <input class="form-control bi bi-spellcheck" type="text" name="product[location]" id="location" required />
          <div class="valid-feedback">Looks Good</div>
        </div>

        <div class="mb-3">
          <label class="form-label" for="price">Product Price per Day</label>
          <div class="input-group">
            <span class="input-group-text" id="price-label">&#8377;</span>
            <input type="number" class="form-control" id="price" placeholder="0.00" name="product[price]"
              requiredaria-label="price" aria-describedby="price-label" />
          </div>
        </div>
        <div class="mb-3">
          <label class="form-label" for="description">Description</label>
          <textarea class="form-control" type="text" name="product[description]" id="description"
            required></textarea>
          <div class="valid-feedback">Looks Good</div>
        </div>

        <div class="mb-3">
            <label class="form-label" for="availability_status">Availability Status</label>
            <textarea class="form-control" type="text" name="product[availability_status]" id="availability_status"
              required></textarea>
            <div class="valid-feedback">Looks Good</div>
        </div>

        <div class="input-group mb-3">
          <input type="file" class="form-control" id="inputGroupFile02" name="image" multiple />
          <label class="input-group-text" for="inputGroupFile02">Upload</label>
        </div>
        <div class="mb-3">
          <button class="btn btn-success">Add Product</button>
        </div>
      </form>
    </div>
  </div>

  <script>
    const categories = [];
    let subCategories = [];

    <% categories.forEach(category => { %>
        subCategories = []
        <% if (category.sub_categories && Array.isArray(category.sub_categories)) { %>
            <% category.sub_categories.forEach(subCategory => { %>
                subCategories.push('<%= subCategory %>');
            <% }) %>
        <% } %>
        categories.push({ category: '<%= category.category %>', sub_categories: subCategories });
    <% }) %>

    const categorySelect = document.getElementById('FormControlSelect');
    const subCategorySelect = document.getElementById('subCategorySelect');

    categorySelect.addEventListener('change', function() {
      const selectedCategory = this.value;
      const selectedCategoryObj = categories.find(obj => obj.category === selectedCategory);
      if (selectedCategoryObj) {
        subCategorySelect.innerHTML = ''; // Clear previous options
        selectedCategoryObj.sub_categories.forEach(subCategory => {
          const option = document.createElement('option');
          option.value = subCategory;
          option.textContent = subCategory;
          subCategorySelect.appendChild(option);
        });
        document.getElementById('subCategoryDiv').style.display = 'block'; // Show sub-categories dropdown
      } else {
        document.getElementById('subCategoryDiv').style.display = 'none'; // Hide sub-categories dropdown if no sub-categories for the selected category
      }
    });
</script>